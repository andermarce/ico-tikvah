{
  "contractName": "TIKVAHTokenCrowdsale",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"rate()\":{\"return\":\"the number of token units a buyer gets per wei.\"},\"token()\":{\"return\":\"the token being sold.\"},\"wallet()\":{\"return\":\"the address where funds are collected.\"},\"weiRaised()\":{\"return\":\"the amount of wei raised.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Paolo Bazzan/Desktop/Daap uni/code5/ico-tikvah/src/contracts/TIKVAHTokenCrowdsale.sol\":\"TIKVAHTokenCrowdsale\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Paolo Bazzan/Desktop/Daap uni/code5/ico-tikvah/src/contracts/TIKVAHTokenCrowdsale.sol\":{\"keccak256\":\"0xc2e43590ca6975ecb8334fb08b182e376f781ffbdefa638c74213aa1cd2a915a\",\"urls\":[\"bzz-raw://c77aa43737e026bf22c25487c42aa8dfd4d7b2f581f0ce02da6c3e22fff5a867\",\"dweb:/ipfs/QmZ4YanjH72Pap9RUQSN6Qye8YgjY9eY8T4rPa2xNKVbZz\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0x659ba0f9a3392cd50a8a5fafaf5dfd8c6a0878f6a4613bceff4e90dceddcd865\",\"urls\":[\"bzz-raw://4ca6617349a9b36fd82e9442a8e445ce9021a174e4399d1457ddc894ee3f5df3\",\"dweb:/ipfs/QmcmyB4cNazZ1sw963Afaijt67M9bDgwmGXCgQajGTD4tm\"]},\"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x3199053db04cdae6c9b4380921a4a4ee720b568d6a9660883b29d25fbec31bc0\",\"urls\":[\"bzz-raw://1b0ff368e21d6007c06e4cfb286fe59d7d7d3ec06283300c9be2153ba11fa93a\",\"dweb:/ipfs/QmRPq2wZM4RAcbj31dP34GCr1CSy2qy3JqfXEkdVie4HLT\"]},\"openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0x8347d09dc704fcd85e048f30bb17d8ec8c0f2bcea7287651fd9f8d1a3d3be24f\",\"urls\":[\"bzz-raw://098a8d86ef069e672de3a3c4f6802160da9b164ebe28602bd1f3d03c5570e73f\",\"dweb:/ipfs/QmUBG9RDuRL4Bg7Uz4CFxa1wjMsR9fJaFjAiGeJntat174\"]},\"openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol\":{\"keccak256\":\"0xc799f13c379b957cb47ad1b21d0f6ad2f06bf177beb28099e972e8f4080f2ac1\",\"urls\":[\"bzz-raw://86d14b66fbc08aae6faf07d58c9c1b0b60f04f3284d5387bdc9338d5af7f845a\",\"dweb:/ipfs/QmdRBUjreeQVVKTHjfRoG5M7gohvN4HqSoEEvRCGKGhZ8N\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzz-raw://1eb493553b27efd46c231a836a83ce50d215639feb97b4aac9f301d0fd034ff5\",\"dweb:/ipfs/QmbMdvSXcqGKxeeYvzF3VrWpoHQyVzMXBhzhAokF2Gdymv\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzz-raw://f40c91ca270bdc9b156f339081a0fc2bbcf73cf5f62b8c73ba555df753ff6619\",\"dweb:/ipfs/QmT8y2VVjGaFdGphpcXrgvdPi2EgF9LuCDgJiJ89LvpFRV\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xc4ca2883e0b0743604143952024c250bb13737ad54bb666b117efdcb766fe3a8\",\"urls\":[\"bzz-raw://bdaf72028f2dc29aa5191b2bfca315a9e3b1d58f900166bdb5ae5f500d569384\",\"dweb:/ipfs/QmZngPiWLXA9i2vp6XNPcGA23GHxT99V1Qma6iRivtbREy\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzz-raw://ee762ff5b7746e41d27dcbcea00c7a3034b58adb1b45ddadddb5b721aff450df\",\"dweb:/ipfs/QmdxqtgEFZjHCoiYyz6pUAQ5iBm7As25jcyEbZoTaAgyDa\"]},\"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x05fcee7431cd35cd312e14e7f316a44ca3ccc5fb3b859aefc15c1a5db94add7e\",\"urls\":[\"bzz-raw://89cd8373a742508c62708e03c970605ee326f1aafdb159d57a4c20c9d60963fc\",\"dweb:/ipfs/QmZBWbRwAD7ChE8Dsqo4rm7ubtGtDL1bjkAVVq6dVPmVwk\"]},\"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x58e8ca389c46941a0bfc26b91025d3427864bd9070a7762f90d29677cd3f3dd8\",\"urls\":[\"bzz-raw://6f72ff6dc34b5f3cb800ce5516084519225e300311b3593c51a4a1ccc78ff804\",\"dweb:/ipfs/Qmd4uMLdQm1XBTgsYSttVCnMwPRMT47WvqABENyXFyVMYm\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516106ca3803806106ca8339818101604052606081101561003357600080fd5b8101908080519060200190929190805190602001909291908051906020019092919050505082828260016000819055506000831161007057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156100aa57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100e457600080fd5b8260038190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050610548806101826000396000f3fe60806040526004361061004a5760003560e01c80632c4e722e146100555780634042b66f14610080578063521eb273146100ab578063ec8ac4d814610102578063fc0c546a14610146575b6100533361019d565b005b34801561006157600080fd5b5061006a610291565b6040518082815260200191505060405180910390f35b34801561008c57600080fd5b5061009561029b565b6040518082815260200191505060405180910390f35b3480156100b757600080fd5b506100c06102a5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101446004803603602081101561011857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019d565b005b34801561015257600080fd5b5061015b6102cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6001600080828254019250508190555060008054905060003490506101c283826102f9565b60006101cd82610345565b90506101e48260045461036390919063ffffffff16565b6004819055506101f48482610382565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a361026b8483610390565b610273610394565b61027d84836103ff565b5050600054811461028d57600080fd5b5050565b6000600354905090565b6000600454905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561033357600080fd5b600081141561034157600080fd5b5050565b600061035c6003548361040390919063ffffffff16565b9050919050565b60008082840190508381101561037857600080fd5b8091505092915050565b61038c828261043d565b5050565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156103fc573d6000803e3d6000fd5b50565b5050565b6000808314156104165760009050610437565b600082840290508284828161042757fe5b041461043257600080fd5b809150505b92915050565b6104456102cf565b73ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156104cb57600080fd5b505af11580156104df573d6000803e3d6000fd5b505050506040513d60208110156104f557600080fd5b810190808051906020019092919050505061050f57600080fd5b505056fea265627a7a72315820c4415047c5209f4d0306724d5326911cfc23cff5ecde31525599d92d458651d064736f6c63430005100032",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c80632c4e722e146100555780634042b66f14610080578063521eb273146100ab578063ec8ac4d814610102578063fc0c546a14610146575b6100533361019d565b005b34801561006157600080fd5b5061006a610291565b6040518082815260200191505060405180910390f35b34801561008c57600080fd5b5061009561029b565b6040518082815260200191505060405180910390f35b3480156100b757600080fd5b506100c06102a5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101446004803603602081101561011857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019d565b005b34801561015257600080fd5b5061015b6102cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6001600080828254019250508190555060008054905060003490506101c283826102f9565b60006101cd82610345565b90506101e48260045461036390919063ffffffff16565b6004819055506101f48482610382565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a361026b8483610390565b610273610394565b61027d84836103ff565b5050600054811461028d57600080fd5b5050565b6000600354905090565b6000600454905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561033357600080fd5b600081141561034157600080fd5b5050565b600061035c6003548361040390919063ffffffff16565b9050919050565b60008082840190508381101561037857600080fd5b8091505092915050565b61038c828261043d565b5050565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156103fc573d6000803e3d6000fd5b50565b5050565b6000808314156104165760009050610437565b600082840290508284828161042757fe5b041461043257600080fd5b809150505b92915050565b6104456102cf565b73ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156104cb57600080fd5b505af11580156104df573d6000803e3d6000fd5b505050506040513d60208110156104f557600080fd5b810190808051906020019092919050505061050f57600080fd5b505056fea265627a7a72315820c4415047c5209f4d0306724d5326911cfc23cff5ecde31525599d92d458651d064736f6c63430005100032",
  "sourceMap": "180:266:2:-;;;247:196;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:196:2;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;247:196:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;391:4;397:6;405:5;576:1:16;560:13;:17;;;;2380:1:6;2373:4;:8;2365:17;;;;;;2418:1;2400:20;;:6;:20;;;;2392:29;;;;;;2465:1;2439:28;;2447:5;2439:28;;;;2431:37;;;;;;2487:4;2479:5;:12;;;;2511:6;2501:7;;:16;;;;;;;;;;;;;;;;;;2536:5;2527:6;;:14;;;;;;;;;;;;;;;;;;2283:265;;;247:196:2;;;180:266;;;;;;",
  "deployedSourceMap": "180:266:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2875:21:6;2885:10;2875:9;:21::i;:::-;180:266:2;3286:75:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3286:75:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3424:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:85:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3114:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3114:87:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3766:603;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3766:603:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;2962:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2962:76:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3766:603;1010:1:16;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;3844:17:6;3864:9;3844:29;;3883:44;3904:11;3917:9;3883:20;:44::i;:::-;3986:14;4003:26;4019:9;4003:15;:26::i;:::-;3986:43;;4077:25;4092:9;4077:10;;:14;;:25;;;;:::i;:::-;4064:10;:38;;;;4113:37;4130:11;4143:6;4113:16;:37::i;:::-;4193:11;4165:59;;4181:10;4165:59;;;4206:9;4217:6;4165:59;;;;;;;;;;;;;;;;;;;;;;;;4235:46;4258:11;4271:9;4235:22;:46::i;:::-;4292:15;:13;:15::i;:::-;4317:45;4339:11;4352:9;4317:21;:45::i;:::-;1067:1:16;;1102:13;;1086:12;:29;1078:38;;;;;;3766:603:6;;:::o;3286:75::-;3323:7;3349:5;;3342:12;;3286:75;:::o;3424:85::-;3466:7;3492:10;;3485:17;;3424:85;:::o;3114:87::-;3153:15;3187:7;;;;;;;;;;;3180:14;;3114:87;:::o;2962:76::-;3000:6;3025;;;;;;;;;;;3018:13;;2962:76;:::o;4911:168::-;5036:1;5013:25;;:11;:25;;;;5005:34;;;;;;5070:1;5057:9;:14;;5049:23;;;;;;4911:168;;:::o;7004:120::-;7071:7;7097:20;7111:5;;7097:9;:13;;:20;;;;:::i;:::-;7090:27;;7004:120;;;:::o;1431:145:9:-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;6206:134:6:-;6293:40;6308:11;6321;6293:14;:40::i;:::-;6206:134;;:::o;6610:145::-;;;:::o;7211:78::-;7255:7;;;;;;;;;;;:16;;:27;7272:9;7255:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7255:27:6;7211:78::o;5374:149::-;;;:::o;229:421:9:-;287:7;532:1;527;:6;523:45;;;556:1;549:8;;;;523:45;578:9;594:1;590;:5;578:17;;622:1;617;613;:5;;;;;;:10;605:19;;;;;;642:1;635:8;;;229:421;;;;;:::o;510:236:7:-;698:7;:5;:7::i;:::-;676:36;;;713:11;726;676:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;676:62:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;676:62:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;676:62:7;;;;;;;;;;;;;;;;668:71;;;;;;510:236;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\";\r\nimport \"openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol\";\r\n\r\n\r\ncontract TIKVAHTokenCrowdsale is Crowdsale, MintedCrowdsale {\r\n    constructor(\r\n        uint256 rate,\r\n        address payable wallet,\r\n        IERC20 token\r\n    )\r\n        MintedCrowdsale()\r\n        Crowdsale(rate, wallet, token)\r\n        public\r\n    {\r\n\r\n    }\r\n}\r\n",
  "sourcePath": "C:/Users/Paolo Bazzan/Desktop/Daap uni/code5/ico-tikvah/src/contracts/TIKVAHTokenCrowdsale.sol",
  "ast": {
    "absolutePath": "/C/Users/Paolo Bazzan/Desktop/Daap uni/code5/ico-tikvah/src/contracts/TIKVAHTokenCrowdsale.sol",
    "exportedSymbols": {
      "TIKVAHTokenCrowdsale": [
        83
      ]
    },
    "id": 84,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 59,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 84,
        "sourceUnit": 651,
        "src": "27:65:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 84,
        "sourceUnit": 679,
        "src": "94:80:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 62,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 650,
              "src": "213:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$650",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 63,
            "nodeType": "InheritanceSpecifier",
            "src": "213:9:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 64,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 678,
              "src": "224:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$678",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 65,
            "nodeType": "InheritanceSpecifier",
            "src": "224:15:2"
          }
        ],
        "contractDependencies": [
          650,
          678,
          1754
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 83,
        "linearizedBaseContracts": [
          83,
          678,
          650,
          1754
        ],
        "name": "TIKVAHTokenCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "433:10:2",
              "statements": []
            },
            "documentation": null,
            "id": 82,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 74,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 73,
                  "name": "MintedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 678,
                  "src": "354:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MintedCrowdsale_$678_$",
                    "typeString": "type(contract MintedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "354:17:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 76,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67,
                    "src": "391:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 77,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 69,
                    "src": "397:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 78,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 71,
                    "src": "405:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1578",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 79,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 75,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 650,
                  "src": "381:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$650_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "381:30:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "269:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "292:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "292:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "325:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1578",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 70,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1578,
                    "src": "325:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1578",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "258:86:2"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "433:0:2"
            },
            "scope": 83,
            "src": "247:196:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 84,
        "src": "180:266:2"
      }
    ],
    "src": "0:448:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Paolo Bazzan/Desktop/Daap uni/code5/ico-tikvah/src/contracts/TIKVAHTokenCrowdsale.sol",
    "exportedSymbols": {
      "TIKVAHTokenCrowdsale": [
        83
      ]
    },
    "id": 84,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 59,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 84,
        "sourceUnit": 651,
        "src": "27:65:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 84,
        "sourceUnit": 679,
        "src": "94:80:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 62,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 650,
              "src": "213:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$650",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 63,
            "nodeType": "InheritanceSpecifier",
            "src": "213:9:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 64,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 678,
              "src": "224:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$678",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 65,
            "nodeType": "InheritanceSpecifier",
            "src": "224:15:2"
          }
        ],
        "contractDependencies": [
          650,
          678,
          1754
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 83,
        "linearizedBaseContracts": [
          83,
          678,
          650,
          1754
        ],
        "name": "TIKVAHTokenCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "433:10:2",
              "statements": []
            },
            "documentation": null,
            "id": 82,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 74,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 73,
                  "name": "MintedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 678,
                  "src": "354:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MintedCrowdsale_$678_$",
                    "typeString": "type(contract MintedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "354:17:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 76,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 67,
                    "src": "391:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 77,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 69,
                    "src": "397:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 78,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 71,
                    "src": "405:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1578",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 79,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 75,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 650,
                  "src": "381:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$650_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "381:30:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "269:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "292:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "292:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "325:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1578",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 70,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1578,
                    "src": "325:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1578",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "258:86:2"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "433:0:2"
            },
            "scope": 83,
            "src": "247:196:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 84,
        "src": "180:266:2"
      }
    ],
    "src": "0:448:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.22",
  "updatedAt": "2020-03-26T17:51:15.603Z",
  "devdoc": {
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "rate()": {
        "return": "the number of token units a buyer gets per wei."
      },
      "token()": {
        "return": "the token being sold."
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}